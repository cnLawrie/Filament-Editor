material {
    name: matTestParams,
    shadingModel: lit,
    blending: transparent,
    transparency : default,
    parameters: [
        { type : float4, name : baseColor },
        { type : float,  name : metallic },
        { type : float,  name : roughness },
        { type : float,  name : reflectance },
        { type : float,  name : clearCoat },
        { type : float,  name : clearCoatRoughness },
        { type : float,  name : anisotropy },
        { type : float3,  name : anisotropyDirection },
        { type : float,  name : ambientOcclusion },
        { type : float3,  name : normal },
        { type : float3,  name : clearCoatNormal },
        { type : float4,  name : emissive },
        { type : float4,  name : postLightingColor }
    ]
}

fragment {
    void material(inout MaterialInputs material) {
        prepareMaterial(material);
        material.baseColor = materialParams.baseColor;
        material.metallic = materialParams.metallic	;
        material.roughness = materialParams.roughness;
        material.reflectance = materialParams.reflectance;
        material.clearCoat = materialParams.clearCoat;
        material.clearCoatRoughness = materialParams.clearCoatRoughness;
        material.anisotropy = materialParams.anisotropy;
        material.anisotropyDirection = materialParams.anisotropyDirection;
        material.ambientOcclusion = materialParams.ambientOcclusion;
        material.normal = materialParams.normal;
        material.clearCoatNormal = materialParams.clearCoatNormal;
        material.emissive = materialParams.emissive;
        material.postLightingColor = materialParams.postLightingColor;
    }
}